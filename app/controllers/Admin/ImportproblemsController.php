<?php
/**
 * YZOI Online Judge System
 *
 * @copyright   Copyright (c) 2010 YZOI
 * @author      xaero <xaero@msn.cn>
 * @version     $Id: AddProblemUSACOController.php 2016-04-29 21:21 $
 */
namespace YZOI\Controllers\Admin;

use YZOI\Common;
use YZOI\Forms\ContestsForm;
use YZOI\Forms\ProblemsForm;
use YZOI\Models\Contests;
use YZOI\Models\ContestsProblems;
use YZOI\Models\Metas;
use YZOI\Models\Problems;

class ImportproblemsController extends ControllerBase
{
    public function initialize()
    {
        return parent::initialize(); // TODO: Change the autogenerated stub
    }
    public function indexAction()
    {
        return $this->dispatcher->forward(array(
            'action' => 'usaco'
        ));
    }

    protected function _trim($string) {
        $string = trim($string);
        $string = str_replace("&nbsp;", '', $string);

        $newstring = "";
        foreach (explode("\n", $string) as $s) {
            $newstring .= ltrim($s) . "\n";
        }

        return $newstring;
    }

    public function vijosAction()
    {
        $this->view->title = "导入11.7-VIJOS题目";

        if ($this->request->isPost())
        {
            $urls = $this->request->getPost('urls', array('trim', 'striptags'));
            $theval = $this->request->getPost('theval', array('trim', 'striptags'));
            $sources = $this->request->getPost('sources', array('trim', 'striptags'));


            require_once $this->config->application->libraryDir . 'simple_html_dom.php';

            $tmp = str_replace('[*]', $theval, $urls);
            $html = file_get_html($tmp);

            $problem = new Problems();


            $ret = $html->find('table[width=740] table');
            //var_dump($html->find('table[width=740] table'));

            $problem->title = $this->_trim($html->find('font[class=style1]',0)->plaintext);

            $tmp = $html->find('table[width=740] table', 1)->find('tr', 1)->find('td', 1)->plaintext;
            //var_dump($tmp);

            if (stripos($tmp, "Background") !== false) { //有额外的“背景”
                $start = 1;
                $description = $this->_trim($ret[$start]->find('tr', 2)->find('td', 1)->plaintext);
            } else {
                $start = 0;
                $description = "";
            }
            //var_dump($start);

            $description .= "\n\n" . $this->_trim($ret[$start+1]->find('tr', 2)->find('td', 1)->plaintext);


            //输入格式
            $description .= "\n\n### Input Data\n" . $this->_trim($ret[$start+2]->find('tr', 2)->find('td', 1)->plaintext);
            $description .= "\n\n### Output Data\n" . $this->_trim($ret[$start+3]->find('tr', 2)->find('td', 1)->plaintext);

            $sample_input = $ret[$start+5]->find('tr', 2)->find('td', 1)->plaintext;
            $sample_output = $ret[$start+6]->find('tr', 2)->find('td', 1)->plaintext;

            $hint = $this->_trim($ret[$start+8]->find('tr', 1)->find('td', 1)->plaintext);
            if (stripos($hint, "Hint") !== false) { //有额外的“Hint”
                $problem->hint = $this->_trim($ret[$start+8]->find('tr', 2)->find('td', 1)->plaintext);
            }

            $problem->sample_input = $sample_input;
            $problem->sample_output = $sample_output;
            $problem->sources = "YZOI";


            $problem->description = $description;

            //var_dump($ret);

            $this->view->additionalCss = array(
                'bsmd/bsmd.css'
            );
            $this->view->additionalJS = array(
                'assets/js/jquery.tokeninput.js',
                'assets/js/jquery.validate.js',
                'bsmd/ace/ace.js',
                'bsmd/bsmd.js',
                'bsmd/marked.min.js',
                'bsmd/admineditor.js'
            );
            $this->view->form = new ProblemsForm($problem);

            // 系统所有的分类
            $this->view->categories = Common::buildTree(
                Common::object2Array(
                    Metas::find("type = '" . Metas::TYPE_CATEGORY ."'")
                )
            );
            // 系统所有的标签
            $this->view->tags = Metas::find("type = 'tag'");

        }

        if (! isset($problem)) {
            //$problem = Problems::findFirstById(1432);
            $problem = new Problems();

            $this->view->problem = $problem;
            $this->view->form = new ProblemsForm($problem);
            //$this->view->categories = null;
            //$this->view->tags = null;
        }

        //$this->view->pick("import_problem_usaco");
    }

    // 适用于2011年左右的老题
    // 老题的所有描述都在一个span里
    public function usacoAction()
    {
        $this->view->title = "导入USACO题目";

        if ($this->request->isPost())
        {
            $urls = $this->request->getPost('urls', array('trim', 'striptags'));
            $theval = $this->request->getPost('theval', array('trim', 'striptags'));
            $sources = $this->request->getPost('sources', array('trim', 'striptags'));

            $thevals = explode('|', $theval);
            $sources = explode("\n", $sources);

            require_once $this->config->application->libraryDir . 'simple_html_dom.php';

            foreach ($thevals as $bigkey => $theval) { //以“|”分的每段

                $this_vals = explode(',', $theval);

                // foreach循环会用$this_vals的副本，不用担心动态增加或减少
                foreach ($this_vals as $key => $tv) {
                    if (stripos($tv, '-')) {
                        $values = explode('-', $tv);
                        unset($this_vals[$key]);
                        for ($x = $values[0]; $x <= $values[1]; $x++)
                            $this_vals[] = $x;
                    }
                }

                $this_vals = array_unique($this_vals, 1);
                sort($this_vals, 1);

                /*
                foreach ($this_vals as $tv) {
                    $tmp = str_replace('[*]', $tv, $urls);
                    echo $tmp . '----------' . $sources[$bigkey] . '<br/>';
                }*/

                foreach ($this_vals as $tv) {
                    $tmp = str_replace('[*]', $tv, $urls);
                    $html = file_get_html($tmp);

                    $problem = new Problems();


                    //题目风格：http://www.usaco.org/index.php?page=viewproblem2&cpid=84
                    $ret_tmp = $html->find('#probtext-text', 0);
                    $ret = $ret_tmp->plaintext;
                    //echo($ret);
                    //echo '<textarea rows="12">' . $ret[0] .'</textarea>';
                    $ret = str_ireplace("\r\n", "\n", $ret);
                    $rets = explode("\n", $ret);


                    $title_begin = stripos($rets[0], ':') + 1;
                    $title_end = stripos($rets[0], '[');
                    $problem->title = trim(substr($rets[0], $title_begin, $title_end - $title_begin));

                    unset($rets[0]); //标题行
                    unset($rets[1]); //空行

                    $total_lines = count($rets);

                    foreach ($rets as $key => $line) {
                        if (substr($line, 0, 12) == 'INPUT FORMAT') {
                            $input_line = $key;
                        } else if (substr($line, 0, 12) == 'SAMPLE INPUT') {
                            $sample_input_line = $key;
                        } else if (substr($line, 0, 13) == 'INPUT DETAILS') {
                            $hint1_line = $key;
                        } else if (substr($line, 0, 13) == 'OUTPUT FORMAT') {
                            $output_line = $key;
                        } else if (substr($line, 0, 13) == 'SAMPLE OUTPUT') {
                            $sample_output_line = $key;
                        } else if (substr($line, 0, 14) == 'OUTPUT DETAILS') {
                            $hint2_line = $key;
                        } else if (substr($line, 0, 8) == 'SOLUTION') {
                            $hint_line = $key;
                        }
                    }

                    //var_dump($rets);

                    $description = '';
                    for ($x = 2; $x < $input_line; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $description .= trim($rets[$x]) . ' ';
                        } else {
                            $description .= $rets[$x] . "\n";
                        }
                    }

                    $description .= "\n\n### Input Data\n";
                    for ($x = $input_line+1; $x < $sample_input_line; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $description .= trim($rets[$x]) . ' ';
                        } else {
                            $description .= $rets[$x] . "\n";
                        }
                    }

                    $sample_input = '';
                    for ($x = $sample_input_line+1; $x < $hint1_line-1; $x++) {
                        $sample_input .= $rets[$x] . "\n";
                    }

                    $description .= "### Output Data\n";
                    for ($x = $output_line+1; $x < $sample_output_line; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $description .= trim($rets[$x]) . ' ';
                        } else {
                            $description .= $rets[$x] . "\n";
                        }
                    }

                    $sample_output = '';
                    for ($x = $sample_output_line+1; $x < $hint2_line-1; $x++) {
                        $sample_output .= $rets[$x] . "\n";
                    }

                    $hint = '';
                    for ($x = $hint1_line; $x < $output_line; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $hint .= trim($rets[$x]) . ' ';
                        } else {
                            $hint .= $rets[$x] . "\n";
                        }
                    }
                    for ($x = $hint2_line; $x <= $total_lines; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $hint .= trim($rets[$x]) . ' ';
                        } else {
                            $hint .= $rets[$x] . "\n";
                        }
                    }

                    if (isset($hint_line) && $hint_line) {
                        //$hint = '';
                        for ($x = $hint_line+1; $x < $total_lines-1; $x++) {
                            if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                                $hint .= trim($rets[$x]) . ' ';
                            } else {
                                $hint .= $rets[$x] . "\n";
                            }
                        }
                        $hint = str_ireplace('$', '$$', $hint);
                        //echo '<textarea rows="12">' . $problem->hint .'</textarea>';
                    }

                    $problem->hint = $hint;
                    //$description = str_ireplace('$', '$$', $description);

                    $problem->description = $description;
                    $problem->sample_input = $sample_input;
                    $problem->sample_output = $sample_output;
                    $problem->sources = $sources[$bigkey];

                    //表单

                    $this->view->additionalCss = array(
                        'bsmd/bsmd.css'
                    );
                    $this->view->additionalJS = array(
                        'assets/js/jquery.tokeninput.js',
                        'assets/js/jquery.validate.js',
                        'bsmd/ace/ace.js',
                        'bsmd/bsmd.js',
                        'bsmd/marked.min.js',
                        'bsmd/admineditor.js'
                    );
                    $this->view->form = new ProblemsForm($problem);

                    // 系统所有的分类
                    $this->view->categories = Common::buildTree(
                        Common::object2Array(
                            Metas::find("type = '" . Metas::TYPE_CATEGORY ."'")
                        )
                    );
                    // 系统所有的标签
                    $this->view->tags = Metas::find("type = 'tag'");


                    //echo '<textarea rows="12">' . $problem->description .'</textarea>';
                    //echo '<textarea rows="12">' . $problem->sample_input .'</textarea>';
                    //echo '<textarea rows="12">' . $problem->sample_output .'</textarea>';

                }

            }

        }

        if (! isset($problem)) {
            //$problem = Problems::findFirstById(1432);
            $problem = new Problems();

            $this->view->problem = $problem;
            $this->view->form = new ProblemsForm($problem);
            //$this->view->categories = null;
            //$this->view->tags = null;
        }

        //$this->view->pick("import_problem_usaco");
    }

    //适用于导入usaco2016年左右的新题
    //新题中有Latex公式，用<pre>标签
    //题目风格：http://www.usaco.org/index.php?page=jan15results
    public function usaco_2016problem_Action()
    {
        $this->view->title = "导入USACO题目";

        if ($this->request->isPost())
        {
            $urls = $this->request->getPost('urls', array('trim', 'striptags'));
            $theval = $this->request->getPost('theval', array('trim', 'striptags'));
            $sources = $this->request->getPost('sources', array('trim', 'striptags'));

            $thevals = explode('|', $theval);
            $sources = explode("\n", $sources);

            require_once $this->config->application->libraryDir . 'simple_html_dom.php';

            foreach ($thevals as $bigkey => $theval) { //以“|”分的每段

                $this_vals = explode(',', $theval);

                // foreach循环会用$this_vals的副本，不用担心动态增加或减少
                foreach ($this_vals as $key => $tv) {
                    if (stripos($tv, '-')) {
                        $values = explode('-', $tv);
                        unset($this_vals[$key]);
                        for ($x = $values[0]; $x <= $values[1]; $x++)
                            $this_vals[] = $x;
                    }
                }

                $this_vals = array_unique($this_vals, 1);
                sort($this_vals, 1);

                /*
                foreach ($this_vals as $tv) {
                    $tmp = str_replace('[*]', $tv, $urls);
                    echo $tmp . '----------' . $sources[$bigkey] . '<br/>';
                }*/

                foreach ($this_vals as $tv) {
                    $tmp = str_replace('[*]', $tv, $urls);
                    $html = file_get_html($tmp);

                    $problem = new Problems();



                    $problem->title = trim(substr($html->find('h2', -1)->plaintext, 11));

                    //题目风格：http://www.usaco.org/index.php?page=jan15results
                    $ret_tmp = $html->find('#probtext-text', 0);
                    $ret = $ret_tmp->plaintext;
                    //echo($ret);
                    //echo '<textarea rows="12">' . $ret[0] .'</textarea>';
                    $ret = str_ireplace("\r\n", "\n", $ret);
                    $rets = explode("\n", $ret);


                    /*$title_begin = stripos($rets[0], ':') + 1;
                    $title_end = stripos($rets[0], '[');
                    $problem->title = trim(substr($rets[0], $title_begin, $title_end - $title_begin));*/

                    //unset($rets[0]); //标题行
                    //unset($rets[1]); //空行

                    $total_lines = count($rets);

                    foreach ($rets as $key => $line) {
                        if (substr($line, 0, 5) == 'INPUT') {
                            $input_line = $key;
                        } else if (substr($line, 0, 12) == 'SAMPLE INPUT') {
                            $sample_input_line = $key;
                        } else if (substr($line, 0, 6) == 'OUTPUT') {
                            $output_line = $key;
                        } else if (substr($line, 0, 13) == 'SAMPLE OUTPUT') {
                            $sample_output_line = $key;
                        } else if (substr($line, 0, 8) == 'SOLUTION') {
                            $hint_line = $key;
                        }
                    }

                    if (isset($hint_line) && $hint_line) {
                        $last_output_line = $hint_line;
                    } else {
                        //找hint的开始行，标记是Sample Output之后的空行
                        for ($x=$sample_output_line+1; $x<$total_lines; $x++) {
                            if (isset($rets[$x]) && isset($rets[$x+1]) && $rets[$x] == '' && $rets[$x+1] == '') {
                                $hint_line = $x+1;
                                break;
                            }
                        }
                        $last_output_line = $total_lines;
                    }

                    //var_dump($rets);

                    $description = '';
                    for ($x = 0; $x < $input_line; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $description .= trim($rets[$x]) . ' ';
                        } else {
                            $description .= $rets[$x] . "\n";
                        }
                    }

                    $description .= "\n\n### Input Data\n";
                    for ($x = $input_line+1; $x < $output_line; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $description .= trim($rets[$x]) . ' ';
                        } else {
                            $description .= $rets[$x] . "\n";
                        }
                    }

                    /*$sample_input = '';
                    for ($x = $sample_input_line; $x < $sample_output_line; $x++) {
                        $rets[$x] = str_replace('SAMPLE INPUT:', '', $rets[$x]);
                        $sample_input .= $rets[$x] . "\n";
                    }*/
                    $sample_input = $html->find('pre.in', 0)->plaintext;
                    $sample_output = $html->find('pre.out', 0)->plaintext;

                    $description .= "### Output Data\n";
                    for ($x = $output_line+1; $x < $sample_input_line; $x++) {
                        if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                            $description .= trim($rets[$x]) . ' ';
                        } else {
                            $description .= $rets[$x] . "\n";
                        }
                    }

                    /*$sample_output = '';
                    for ($x = $sample_output_line; $x < $last_output_line; $x++) {
                        $sample_output .= $rets[$x] . "\n";
                    }*/

                    if (isset($hint_line) && $hint_line) {
                        $hint = '';
                        for ($x = $hint_line+1; $x < $total_lines-1; $x++) {
                            if (strlen(trim($rets[$x+1])) != 0 && strlen(trim($rets[$x])) != 0) {
                                $hint .= trim($rets[$x]) . ' ';
                            } else {
                                $hint .= $rets[$x] . "\n";
                            }
                        }
                        $hint = str_ireplace('$', '$$', $hint);
                        $problem->hint = $hint;
                        //echo '<textarea rows="12">' . $problem->hint .'</textarea>';
                    }




                    $description = str_ireplace('$', '$$', $description);

                    $problem->description = $description;
                    $problem->sample_input = $sample_input;
                    $problem->sample_output = $sample_output;
                    $problem->sources = $sources[$bigkey];

                    //表单

                    $this->view->additionalCss = array(
                        'bsmd/bsmd.css'
                    );
                    $this->view->additionalJS = array(
                        'assets/js/jquery.tokeninput.js',
                        'assets/js/jquery.validate.js',
                        'bsmd/ace/ace.js',
                        'bsmd/bsmd.js',
                        'bsmd/marked.min.js',
                        'bsmd/admineditor.js'
                    );
                    $this->view->form = new ProblemsForm($problem);

                    // 系统所有的分类
                    $this->view->categories = Common::buildTree(
                        Common::object2Array(
                            Metas::find("type = '" . Metas::TYPE_CATEGORY ."'")
                        )
                    );
                    // 系统所有的标签
                    $this->view->tags = Metas::find("type = 'tag'");


                    //echo '<textarea rows="12">' . $problem->description .'</textarea>';
                    //echo '<textarea rows="12">' . $problem->sample_input .'</textarea>';
                    //echo '<textarea rows="12">' . $problem->sample_output .'</textarea>';

                }

            }

        }

        if (! isset($problem)) {
            $this->view->form = new ProblemsForm();
            $this->view->categories = null;
            $this->view->tags = null;
        }

        //$this->view->pick("import_problem_usaco");
    }


    /**
     * 导入free problem set
     */
    public function fpsAction()
    {

    }
}