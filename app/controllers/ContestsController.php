<?php/** * YZOI Online Judge System * * @copyright   Copyright (c) 2010 YZOI * @author      xaero <xaero@msn.cn> * @version     $Id: IndexController.php 2015-10-22 18:14 $ */namespace YZOI\Controllers;use YZOI\Common;use YZOI\Forms\StatusForm;use YZOI\Forms\SubmitcodeForm;use YZOI\Models\Contests;use \Phalcon\Paginator\Adapter\Model as Paginator;use YZOI\Models\Solutions;use YZOI\Parser;class ContestsController extends ControllerBase{    public function initialize()    {        parent::initialize(); // TODO: Change the autogenerated stub    }    public function indexAction()    {        return $this->dispatcher->forward(array(            'action' => 'list'        ));    }    /**     * 历次比赛列表     */    public function listAction()    {        $this->view->title = "历次作业/测验";        $numberPage = $this->request->getQuery("page", "int", 1);        $contests = Contests::find(array(            "active = 'Y'",            "order" => "id DESC"        ));        $paginator = new Paginator(array(            'data' => $contests,            'limit' => Contests::FRONT_PER_PAGE,            'page' => $numberPage        ));        $this->view->page = $paginator->getPaginate();    }    /**     * 比赛首页     *     * @param $contest_id     */    public function showAction($contest_id)    {        $contest = Contests::findFirstById($contest_id);        $this->view->title = "测验：" . $contest->id . " - " . $contest->title;        $this->view->contest = $contest;    }    /**     * 比赛中的某个题目页     *     * @param $contest_id     * @param $problem_id     */    public function viewAction($contest_id, $problem_id)    {        //未登录的不能看，权限不够的不能看，在未开始/未结束的测试中不能看        $user = $this->auth->getIdentity();        if (! $user || ! is_object($user)) {            $this->flashSession->error("请先登录");            return $this->response->redirect("users/login");        }        $contest = Contests::findFirstById($contest_id);        $problem = $contest->problems(intval($problem_id));        if ($user) {            $entity = new \stdClass();            //$entity->user_id = $user->id;            $entity->ccid = $contest->id;            $entity->cpid = $problem_id; //问题在测试中的序号            $entity->problem_id = $problem->id;            $entity->language = $user->language;            $form = new SubmitcodeForm($entity);            $this->view->form = $form;        }        $parser = new Parser();        $this->view->parser = $parser;        $this->view->additionalCss = array(            'assets/css/katex.min.css'        );        $this->view->additionalJS = array(            'assets/js/katex.min.js',            'ZeroClipboard/ZeroClipboard.js',            'bsmd/ace/ace.js',            'bsmd/ace/ext-static_highlight.js',            'bsmd/code.js',            'assets/js/yzoitex.js'        );        $display_pid = Common::contest_pid($problem_id);        $this->view->display_pid = $display_pid;        $this->view->title = "测验$contest->id, 问题$display_pid";        $this->view->contest = $contest;        $this->view->problem = $problem;    }    public function statusAction()    {        $contest_id = $this->request->getQuery("cid", array("trim", "int"));        if (! $contest_id) {            return $this->dispatcher->forward(array(                'controller' => 'status',                'action' => 'index'            ));        }        $pid = $this->request->getQuery("pid", array("trim"));        $uname = $this->request->getQuery("uname", array("trim", "striptags"));        $ulang = $this->request->getQuery("ulang", array("trim", "int"));        $result = $this->request->getQuery("result", array("trim", "int"));        //在contest里， $problems_id要求是0～25或A～Z的字母        if (is_numeric($pid))            $pid = intval($pid);        else if (ord(strtoupper($pid)) >=65 && ord(strtoupper($pid)) <=90 )            $pid = ord(strtoupper($pid)) - 65;        $filter = array(            'cid' => $contest_id,            'pid' => $pid,            'uname' => $uname,            'ulang' => $ulang,            'result' => $result        );        //var_dump($filter);        $filter = $this->clear_data($filter,  array(-1, '', null));        //var_dump($filter);        $this->view->title = "测验 $contest_id 的测评状态";        $contest = Contests::findFirstById($contest_id);        $this->view->contest = $contest;        $status = Solutions::findAllSolutionsBySql($filter);        $form = new StatusForm((object)$filter);        $this->view->form = $form;        $this->view->codeform = new SubmitcodeForm(); //solution列表无需初始化Form（由jquery初始化）        $numberPage = $this->request->getQuery("page", "int", 1);        $paginator = new Paginator(array(            'data' => $status,            'limit' => Solutions::FRONT_PER_PAGE,            'page' => $numberPage        ));        $this->view->page = $paginator->getPaginate();		$this->view->filter = $filter;        $this->view->pick("status/index");    }    public function standingAction($contest_id)    {        $this->view->title = "测验/作业 $contest_id 的排名表";        $this->view->contest = Contests::findFirstById($contest_id);    }}